version: "3.8"
services:
  llm_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_server
    depends_on:
      qdrant:
        condition: service_healthy
      ollama_embedding:
        condition: service_healthy
      valkey:
        condition: service_healthy
      neo_graph:
        condition: service_healthy
    volumes:
      - ./:/app:Z
      - ./logs:/app/logs:Z
      - ./media_files:/app/media_files:Z
    restart: unless-stopped
    secrets:
      # - postgres_secrets
      - whatsapp_secrets
      - whatsapp_token
    env_file:
      - .env
    networks:
      - autoparts_network
    command:
      - "uvicorn"
      - "main:app"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "8000"
      - "--log-level"
      - "info"
      - "--reload" # Remove in production
      - "--workers"
      - "6"
    ports:
      - "8000:8000"
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - autoparts_qdrant_data:/qdrant/storage
  ollama_embedding:
    image: ollama/ollama:latest
    container_name: embedding_server
    ports:
      - "11434:11434"
    volumes:
      - autoparts_embeddings_data:/root/.ollama
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://ollama_embedding:11434/api/tags"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s
    entrypoint: >
      sh -c "
        ollama serve &
        sleep 10 &&
        ollama pull nomic-embed-text &&
        tail -f /dev/null
      "
    networks:
      - autoparts_network
  neo_graph:
    image: neo4j:2025.06.2-bullseye
    container_name: graph_server
    restart: always
    ports:
      - 7474:7474 #Browser
      - 7687:7687
    volumes:
      - autoparts_graph_data:/data
    environment:
      - NEO4J_AUTH=none
      - NEO4J_PLUGINS=["apoc"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7474"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - autoparts_network
  valkey:
    image: valkey/valkey:8.1-alpine
    container_name: valkey_server
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - autoparts_valkey_data:/data
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - autoparts_network
  postgres:
    image: docker.io/library/postgres:17.5-alpine
    container_name: db_server
    ports:
      - "5432:5432"
    volumes:
      - autoparts_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      - POSTGRES_DB=autoparts_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d autoparts_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - autoparts_network

configs:
  qdrant_config:
    content: |
      log_level: INFO

networks:
  autoparts_network:
    driver: bridge

volumes:
  autoparts_qdrant_data:
  autoparts_embeddings_data:
  autoparts_valkey_data:
  autoparts_postgres_data:
  autoparts_graph_data:

secrets:
  whatsapp_secrets:
    file: ./secrets/whatsapp_secrets.txt
  whatsapp_token:
    file: ./secrets/whatsapp_token.txt
